var s=Object.defineProperty;var i=Object.getOwnPropertyDescriptor;var a=Object.getOwnPropertyNames;var f=Object.prototype.hasOwnProperty;var h=(l,t)=>{for(var o in t)s(l,o,{get:t[o],enumerable:!0})},u=(l,t,o,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let e of a(t))!f.call(l,e)&&e!==o&&s(l,e,{get:()=>t[e],enumerable:!(n=i(t,e))||n.enumerable});return l};var w=l=>u(s({},"__esModule",{value:!0}),l);var b={};h(b,{Finder:()=>c.Finder,closest:()=>y,finder:()=>r,matches:()=>m,querySelector:()=>p,querySelectorAll:()=>x});module.exports=w(b);var c=require("./js/finder.js");/*!
 * DOM Selector - A CSS selector engine.
 * @license MIT
 * @copyright asamuzaK (Kazz)
 * @see {@link https://github.com/asamuzaK/domSelector/blob/main/LICENSE}
 */let r=new c.Finder;const m=(l,t,o)=>{let n;try{r||(r=new c.Finder),n=r.matches(l,t,o)}catch(e){throw e instanceof globalThis[e.name]&&(r=null),e}return n},y=(l,t,o)=>{let n;try{r||(r=new c.Finder),n=r.closest(l,t,o)}catch(e){throw e instanceof globalThis[e.name]&&(r=null),e}return n},p=(l,t,o)=>{let n;try{r||(r=new c.Finder),n=r.querySelector(l,t,o)}catch(e){throw e instanceof globalThis[e.name]&&(r=null),e}return n},x=(l,t,o)=>{let n;try{r||(r=new c.Finder),n=r.querySelectorAll(l,t,o)}catch(e){throw e instanceof globalThis[e.name]&&(r=null),e}return n};0&&(module.exports={Finder,closest,finder,matches,querySelector,querySelectorAll});
//# sourceMappingURL=index.js.map
