{
  "version": 3,
  "sources": ["../../../src/js/dom-util.js"],
  "sourcesContent": ["/**\n * dom-util.js\n */\n\n/* import */\nimport bidiFactory from 'bidi-js';\n\n/* constants */\nimport {\n  DOCUMENT_NODE, DOCUMENT_FRAGMENT_NODE, DOCUMENT_POSITION_CONTAINED_BY,\n  ELEMENT_NODE, SYNTAX_ERR\n} from './constant.js';\nconst LTR = 'ltr';\nconst RTL = 'rtl';\n\n/* regexp */\nconst INPUT_TYPE =\n  /^(?:(?:butto|hidde)n|(?:emai|te|ur)l|(?:rese|submi|tex)t|password|search)$/;\nconst SHADOW_MODE = /^(?:close|open)$/;\n\n/* bidi */\nconst bidi = bidiFactory();\n\n/**\n * is in shadow tree\n * @param {object} node - node\n * @returns {boolean} - result;\n */\nexport const isInShadowTree = (node = {}) => {\n  let bool;\n  if (node.nodeType === ELEMENT_NODE ||\n      node.nodeType === DOCUMENT_FRAGMENT_NODE) {\n    let refNode = node;\n    while (refNode) {\n      const { host, mode, nodeType, parentNode } = refNode;\n      if (host && mode && nodeType === DOCUMENT_FRAGMENT_NODE &&\n          SHADOW_MODE.test(mode)) {\n        bool = true;\n        break;\n      }\n      refNode = parentNode;\n    }\n  }\n  return !!bool;\n};\n\n/**\n * get slotted text content\n * @param {object} node - Element node\n * @returns {?string} - text content\n */\nexport const getSlottedTextContent = (node = {}) => {\n  let res;\n  if (node.localName === 'slot' && isInShadowTree(node)) {\n    const nodes = node.assignedNodes();\n    if (nodes.length) {\n      for (const item of nodes) {\n        res = item.textContent.trim();\n        if (res) {\n          break;\n        }\n      }\n    } else {\n      res = node.textContent.trim();\n    }\n  }\n  return res ?? null;\n};\n\n/**\n * get directionality of node\n * @see https://html.spec.whatwg.org/multipage/dom.html#the-dir-attribute\n * @param {object} node - Element node\n * @returns {?string} - 'ltr' / 'rtl'\n */\nexport const getDirectionality = (node = {}) => {\n  let res;\n  if (node.nodeType === ELEMENT_NODE) {\n    const { dir: nodeDir, localName, parentNode } = node;\n    if (/^(?:ltr|rtl)$/.test(nodeDir)) {\n      res = nodeDir;\n    } else if (nodeDir === 'auto') {\n      let text;\n      if (localName === 'textarea') {\n        text = node.value;\n      } else if (localName === 'input' &&\n                 (!node.type || INPUT_TYPE.test(node.type))) {\n        text = node.value;\n      } else if (localName === 'slot') {\n        text = getSlottedTextContent(node);\n      } else {\n        text = node.textContent.trim();\n      }\n      if (text) {\n        const { paragraphs: [{ level }] } = bidi.getEmbeddingLevels(text);\n        if (level % 2 === 1) {\n          res = RTL;\n        } else {\n          res = LTR;\n        }\n      }\n      if (!res) {\n        if (parentNode) {\n          const { nodeType: parentNodeType } = parentNode;\n          if (parentNodeType === ELEMENT_NODE) {\n            res = getDirectionality(parentNode);\n          } else if (parentNodeType === DOCUMENT_NODE ||\n                     parentNodeType === DOCUMENT_FRAGMENT_NODE) {\n            res = LTR;\n          }\n        } else {\n          res = LTR;\n        }\n      }\n    } else if (localName === 'bdi') {\n      const text = node.textContent.trim();\n      if (text) {\n        const { paragraphs: [{ level }] } = bidi.getEmbeddingLevels(text);\n        if (level % 2 === 1) {\n          res = RTL;\n        } else {\n          res = LTR;\n        }\n      }\n      if (!(res || parentNode)) {\n        res = LTR;\n      }\n    } else if (localName === 'input' && node.type === 'tel') {\n      res = LTR;\n    } else if (parentNode) {\n      if (localName === 'slot') {\n        const text = getSlottedTextContent(node);\n        if (text) {\n          const { paragraphs: [{ level }] } = bidi.getEmbeddingLevels(text);\n          if (level % 2 === 1) {\n            res = RTL;\n          } else {\n            res = LTR;\n          }\n        }\n      }\n      if (!res) {\n        const { nodeType: parentNodeType } = parentNode;\n        if (parentNodeType === ELEMENT_NODE) {\n          res = getDirectionality(parentNode);\n        } else if (parentNodeType === DOCUMENT_NODE ||\n                   parentNodeType === DOCUMENT_FRAGMENT_NODE) {\n          res = LTR;\n        }\n      }\n    } else {\n      res = LTR;\n    }\n  }\n  return res ?? null;\n};\n\n/**\n * is content editable\n * NOTE: not implemented in jsdom https://github.com/jsdom/jsdom/issues/1670\n * @param {object} node - Element node\n * @returns {boolean} - result\n */\nexport const isContentEditable = (node = {}) => {\n  let res;\n  if (node.nodeType === ELEMENT_NODE) {\n    if (typeof node.isContentEditable === 'boolean') {\n      res = node.isContentEditable;\n    } else if (node.ownerDocument.designMode === 'on') {\n      res = true;\n    } else if (node.hasAttribute('contenteditable')) {\n      const attr = node.getAttribute('contenteditable');\n      if (attr === '' || /^(?:plaintext-only|true)$/.test(attr)) {\n        res = true;\n      } else if (attr === 'inherit') {\n        let parent = node.parentNode;\n        while (parent) {\n          if (isContentEditable(parent)) {\n            res = true;\n            break;\n          }\n          parent = parent.parentNode;\n        }\n      }\n    }\n  }\n  return !!res;\n};\n\n/**\n * is namespace declared\n * @param {string} ns - namespace\n * @param {object} node - Element node\n * @returns {boolean} - result\n */\nexport const isNamespaceDeclared = (ns = '', node = {}) => {\n  let res;\n  if (ns && typeof ns === 'string' && node.nodeType === ELEMENT_NODE) {\n    const attr = `xmlns:${ns}`;\n    const root = node.ownerDocument.documentElement;\n    let parent = node;\n    while (parent) {\n      if (typeof parent.hasAttribute === 'function' &&\n          parent.hasAttribute(attr)) {\n        res = true;\n        break;\n      } else if (parent === root) {\n        break;\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return !!res;\n};\n\n/**\n * is node same or descendant of the root node\n * @param {object} node - Element node\n * @param {object} root - Document, DocumentFragment, Element node\n * @returns {boolean} - result\n */\nexport const isSameOrDescendant = (node = {}, root = {}) => {\n  let res;\n  if (node.ownerDocument && node.nodeType === ELEMENT_NODE) {\n    if (!root || root.nodeType !== ELEMENT_NODE) {\n      root = node.ownerDocument;\n    }\n    if (node === root) {\n      res = true;\n    } else if (root) {\n      res = root.compareDocumentPosition(node) & DOCUMENT_POSITION_CONTAINED_BY;\n    }\n  }\n  return !!res;\n};\n\n/**\n * selector to node properties - e.g. ns|E -> { prefix: ns, tagName: E }\n * @param {string} selector - type selector\n * @param {object} [node] - Element node\n * @returns {object} - node properties\n */\nexport const selectorToNodeProps = (selector, node) => {\n  let prefix;\n  let tagName;\n  if (selector && typeof selector === 'string') {\n    if (/\\|/.test(selector)) {\n      [prefix, tagName] = selector.split('|');\n    } else {\n      prefix = '*';\n      tagName = selector;\n    }\n  } else {\n    throw new DOMException(`invalid selector ${selector}`, SYNTAX_ERR);\n  }\n  return {\n    prefix,\n    tagName\n  };\n};\n"],
  "mappings": "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",
  "names": ["dom_util_exports", "__export", "getDirectionality", "getSlottedTextContent", "isContentEditable", "isInShadowTree", "isNamespaceDeclared", "isSameOrDescendant", "selectorToNodeProps", "__toCommonJS", "import_bidi_js", "import_constant", "LTR", "RTL", "INPUT_TYPE", "SHADOW_MODE", "bidi", "bidiFactory", "node", "bool", "refNode", "host", "mode", "nodeType", "parentNode", "res", "nodes", "item", "nodeDir", "localName", "text", "level", "parentNodeType", "attr", "parent", "ns", "root", "selector", "prefix", "tagName"]
}
