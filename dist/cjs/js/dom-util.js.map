{
  "version": 3,
  "sources": ["../../../src/js/dom-util.js"],
  "sourcesContent": ["/**\n * dom-util.js\n */\n\n/* import */\nimport bidiFactory from 'bidi-js';\n\n/* constants */\nimport {\n  DOCUMENT_FRAGMENT_NODE, DOCUMENT_NODE, DOCUMENT_POSITION_CONTAINS,\n  DOCUMENT_POSITION_CONTAINED_BY, DOCUMENT_POSITION_PRECEDING, ELEMENT_NODE,\n  REG_SHADOW_MODE, TEXT_NODE, TYPE_FROM, TYPE_TO\n} from './constant.js';\n\n/**\n * verify node\n * @param {*} node - node\n * @throws\n * @returns {object} - Document, DocumentFragment, Element node\n */\nexport const verifyNode = node => {\n  if (!node || !node.nodeType || !node.nodeName) {\n    const type = Object.prototype.toString.call(node).slice(TYPE_FROM, TYPE_TO);\n    const msg = `Unexpected type ${type}`;\n    throw new TypeError(msg);\n  } else if (!(node.nodeType === DOCUMENT_NODE ||\n               node.nodeType === DOCUMENT_FRAGMENT_NODE ||\n               node.nodeType === ELEMENT_NODE)) {\n    const msg = `Unexpected node ${node.nodeName}`;\n    throw new TypeError(msg);\n  }\n  return node;\n};\n\n/**\n * prepare window, document, root node\n * @param {object} node - Document, DocumentFragment, Element node\n * @returns {Array.<object>} - array of window, document, root node\n */\nexport const prepareDOMObjects = node => {\n  node = verifyNode(node);\n  let document;\n  let root;\n  switch (node.nodeType) {\n    case DOCUMENT_NODE: {\n      document = node;\n      root = node;\n      break;\n    }\n    case DOCUMENT_FRAGMENT_NODE: {\n      document = node.ownerDocument;\n      root = node;\n      break;\n    }\n    case ELEMENT_NODE:\n    default: {\n      document = node.ownerDocument;\n      let parent = node;\n      while (parent) {\n        if (parent.parentNode) {\n          parent = parent.parentNode;\n        } else {\n          break;\n        }\n      }\n      root = parent;\n      break;\n    }\n  }\n  // NOTE: nullable\n  const window = document.defaultView;\n  return [\n    window,\n    document,\n    root\n  ];\n};\n\n/**\n * is in shadow tree\n * @param {object} node - node\n * @returns {boolean} - result;\n */\nexport const isInShadowTree = (node = {}) => {\n  let bool;\n  if (node.nodeType === ELEMENT_NODE ||\n      node.nodeType === DOCUMENT_FRAGMENT_NODE) {\n    let refNode = node;\n    while (refNode) {\n      const { host, mode, nodeType, parentNode } = refNode;\n      if (host && mode && nodeType === DOCUMENT_FRAGMENT_NODE &&\n          REG_SHADOW_MODE.test(mode)) {\n        bool = true;\n        break;\n      }\n      refNode = parentNode;\n    }\n  }\n  return !!bool;\n};\n\n/**\n * get slotted text content\n * @param {object} node - Element node\n * @returns {?string} - text content\n */\nexport const getSlottedTextContent = (node = {}) => {\n  let res;\n  if (node.localName === 'slot' && isInShadowTree(node)) {\n    const nodes = node.assignedNodes();\n    if (nodes.length) {\n      for (const item of nodes) {\n        res = item.textContent.trim();\n        if (res) {\n          break;\n        }\n      }\n    } else {\n      res = node.textContent.trim();\n    }\n  }\n  return res ?? null;\n};\n\n/**\n * get directionality of node\n * @see https://html.spec.whatwg.org/multipage/dom.html#the-dir-attribute\n * @param {object} node - Element node\n * @returns {?string} - 'ltr' / 'rtl'\n */\nexport const getDirectionality = (node = {}) => {\n  let res;\n  if (node.nodeType === ELEMENT_NODE) {\n    const { dir: nodeDir, localName, parentNode } = node;\n    const { getEmbeddingLevels } = bidiFactory();\n    const regDir = /^(?:ltr|rtl)$/;\n    if (regDir.test(nodeDir)) {\n      res = nodeDir;\n    } else if (nodeDir === 'auto') {\n      let text;\n      switch (localName) {\n        case 'input': {\n          if (!node.type || /^(?:(?:butto|hidde)n|(?:emai|te|ur)l|(?:rese|submi|tex)t|password|search)$/.test(node.type)) {\n            text = node.value;\n          }\n          break;\n        }\n        case 'slot': {\n          text = getSlottedTextContent(node);\n          break;\n        }\n        case 'textarea': {\n          text = node.value;\n          break;\n        }\n        default: {\n          const items = [].slice.call(node.childNodes);\n          for (const item of items) {\n            const {\n              dir: itemDir, localName: itemLocalName, nodeType: itemNodeType,\n              textContent: itemTextContent\n            } = item;\n            if (itemNodeType === TEXT_NODE) {\n              text = itemTextContent.trim();\n            } else if (itemNodeType === ELEMENT_NODE) {\n              if (!/^(?:bdi|s(?:cript|tyle)|textarea)$/.test(itemLocalName) &&\n                  (!itemDir || !regDir.test(itemDir))) {\n                if (itemLocalName === 'slot') {\n                  text = getSlottedTextContent(item);\n                } else {\n                  text = itemTextContent.trim();\n                }\n              }\n            }\n            if (text) {\n              break;\n            }\n          }\n        }\n      }\n      if (text) {\n        const { paragraphs: [{ level }] } = getEmbeddingLevels(text);\n        if (level % 2 === 1) {\n          res = 'rtl';\n        } else {\n          res = 'ltr';\n        }\n      }\n      if (!res) {\n        if (parentNode) {\n          const { nodeType: parentNodeType } = parentNode;\n          if (parentNodeType === ELEMENT_NODE) {\n            res = getDirectionality(parentNode);\n          } else if (parentNodeType === DOCUMENT_NODE ||\n                     parentNodeType === DOCUMENT_FRAGMENT_NODE) {\n            res = 'ltr';\n          }\n        } else {\n          res = 'ltr';\n        }\n      }\n    } else if (localName === 'bdi') {\n      const text = node.textContent.trim();\n      if (text) {\n        const { paragraphs: [{ level }] } = getEmbeddingLevels(text);\n        if (level % 2 === 1) {\n          res = 'rtl';\n        } else {\n          res = 'ltr';\n        }\n      }\n      if (!(res || parentNode)) {\n        res = 'ltr';\n      }\n    } else if (localName === 'input' && node.type === 'tel') {\n      res = 'ltr';\n    } else if (parentNode) {\n      if (localName === 'slot') {\n        const text = getSlottedTextContent(node);\n        if (text) {\n          const { paragraphs: [{ level }] } = getEmbeddingLevels(text);\n          if (level % 2 === 1) {\n            res = 'rtl';\n          } else {\n            res = 'ltr';\n          }\n        }\n      }\n      if (!res) {\n        const { nodeType: parentNodeType } = parentNode;\n        if (parentNodeType === ELEMENT_NODE) {\n          res = getDirectionality(parentNode);\n        } else if (parentNodeType === DOCUMENT_NODE ||\n                   parentNodeType === DOCUMENT_FRAGMENT_NODE) {\n          res = 'ltr';\n        }\n      }\n    } else {\n      res = 'ltr';\n    }\n  }\n  return res ?? null;\n};\n\n/**\n * is content editable\n * NOTE: not implemented in jsdom https://github.com/jsdom/jsdom/issues/1670\n * @param {object} node - Element node\n * @returns {boolean} - result\n */\nexport const isContentEditable = (node = {}) => {\n  let res;\n  if (node.nodeType === ELEMENT_NODE) {\n    if (typeof node.isContentEditable === 'boolean') {\n      res = node.isContentEditable;\n    } else if (node.ownerDocument.designMode === 'on') {\n      res = true;\n    } else if (node.hasAttribute('contenteditable')) {\n      const attr = node.getAttribute('contenteditable');\n      if (attr === '' || /^(?:plaintext-only|true)$/.test(attr)) {\n        res = true;\n      } else if (attr === 'inherit') {\n        let parent = node.parentNode;\n        while (parent) {\n          if (isContentEditable(parent)) {\n            res = true;\n            break;\n          }\n          parent = parent.parentNode;\n        }\n      }\n    }\n  }\n  return !!res;\n};\n\n/**\n * is namespace declared\n * @param {string} ns - namespace\n * @param {object} node - Element node\n * @returns {boolean} - result\n */\nexport const isNamespaceDeclared = (ns = '', node = {}) => {\n  let res;\n  if (ns && typeof ns === 'string' && node.nodeType === ELEMENT_NODE) {\n    const attr = `xmlns:${ns}`;\n    const root = node.ownerDocument.documentElement;\n    let parent = node;\n    while (parent) {\n      if (typeof parent.hasAttribute === 'function' &&\n          parent.hasAttribute(attr)) {\n        res = true;\n        break;\n      } else if (parent === root) {\n        break;\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return !!res;\n};\n\n/**\n * is inclusive - nodeA and nodeB are in inclusive relation\n * @param {object} nodeA - Element node\n * @param {object} nodeB - Element node\n * @returns {boolean} - result\n */\nexport const isInclusive = (nodeA = {}, nodeB = {}) => {\n  let res;\n  if (nodeA.nodeType === ELEMENT_NODE && nodeB.nodeType === ELEMENT_NODE) {\n    const posBit = nodeB.compareDocumentPosition(nodeA);\n    res = posBit & DOCUMENT_POSITION_CONTAINS ||\n          posBit & DOCUMENT_POSITION_CONTAINED_BY;\n  }\n  return !!res;\n};\n\n/**\n * is preceding - nodeA precedes and/or contains nodeB\n * @param {object} nodeA - Element node\n * @param {object} nodeB - Element node\n * @returns {boolean} - result\n */\nexport const isPreceding = (nodeA = {}, nodeB = {}) => {\n  let res;\n  if (nodeA.nodeType === ELEMENT_NODE && nodeB.nodeType === ELEMENT_NODE) {\n    const posBit = nodeB.compareDocumentPosition(nodeA);\n    res = posBit & DOCUMENT_POSITION_PRECEDING ||\n          posBit & DOCUMENT_POSITION_CONTAINS;\n  }\n  return !!res;\n};\n\n/**\n * sort nodes\n * @param {Array.<object>|Set.<object>} nodes - collection of nodes\n * @returns {Array.<object|undefined>} - collection of sorted nodes\n */\nexport const sortNodes = (nodes = []) => {\n  const arr = [...nodes];\n  if (arr.length > 1) {\n    arr.sort((a, b) => {\n      let res;\n      if (isPreceding(b, a)) {\n        res = 1;\n      } else {\n        res = -1;\n      }\n      return res;\n    });\n  }\n  return arr;\n};\n"],
  "mappings": "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",
  "names": ["dom_util_exports", "__export", "getDirectionality", "getSlottedTextContent", "isContentEditable", "isInShadowTree", "isInclusive", "isNamespaceDeclared", "isPreceding", "prepareDOMObjects", "sortNodes", "verifyNode", "__toCommonJS", "import_bidi_js", "import_constant", "node", "msg", "document", "root", "parent", "bool", "refNode", "host", "mode", "nodeType", "parentNode", "res", "nodes", "item", "nodeDir", "localName", "getEmbeddingLevels", "bidiFactory", "regDir", "text", "items", "itemDir", "itemLocalName", "itemNodeType", "itemTextContent", "level", "parentNodeType", "attr", "ns", "nodeA", "nodeB", "posBit", "arr", "a", "b"]
}
