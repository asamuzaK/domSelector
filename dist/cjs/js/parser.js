var u=Object.defineProperty;var O=Object.getOwnPropertyDescriptor;var $=Object.getOwnPropertyNames;var w=Object.prototype.hasOwnProperty;var D=(n,e)=>{for(var s in e)u(n,s,{get:e[s],enumerable:!0})},P=(n,e,s,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let t of $(e))!w.call(n,t)&&t!==s&&u(n,t,{get:()=>e[t],enumerable:!(r=O(e,t))||r.enumerable});return n};var C=n=>P(u({},"__esModule",{value:!0}),n);var L={};D(L,{generateCSS:()=>S.generate,parseSelector:()=>d,preprocess:()=>m,unescapeSelector:()=>_,walkAST:()=>b});module.exports=C(L);var a=require("css-tree"),i=require("./constant.js"),S=require("css-tree");const T=parseInt("10000",16),y=16,F=2,I=/^([\da-f]{1,6}\s?)/i,E=/^(?:(?:ha|i)s|not|where)$/,x=/(:lang\(\s*("[A-Z\d\-*]+")\s*\))/i,A=/^[\n\r\f]/,_=(n="")=>{if(typeof n=="string"&&n.indexOf("\\",0)>=0){const e=n.split("\\"),s=e.length;for(let r=1;r<s;r++){let t=e[r];if(r===s-1&&t==="")t="\uFFFD";else{const c=I.exec(t);if(c){const[,o]=c;let l;try{const f=parseInt("D800",16),g=parseInt("DFFF",16),h=parseInt(o,16);h===0||h>=f&&h<=g?l="\uFFFD":l=String.fromCodePoint(h)}catch{l="\uFFFD"}let p="";t.length>o.length&&(p=t.substring(o.length)),t=`${l}${p}`}else A.test(t)&&(t="\\"+t)}e[r]=t}n=e.join("")}return n},m=(...n)=>{if(!n.length)throw new TypeError("1 argument required, but only 0 present.");let[e]=n;if(typeof e=="string"){let s=0;for(;s>=0&&(s=e.indexOf("#",s),!(s<0));){const r=e.substring(0,s+1);let t=e.substring(s+1);const c=t.codePointAt(0);if(c>=T){const o=`\\${c.toString(y)} `;t.length===F?t=o:t=`${o}${t.substring(F)}`}e=`${r}${t}`,s++}e=e.replace(/\f|\r\n?/g,`
`).replace(/[\0\uD800-\uDFFF]|\\$/g,"\uFFFD")}else if(e==null)e=Object.prototype.toString.call(e).slice(i.TYPE_FROM,i.TYPE_TO).toLowerCase();else throw new DOMException(`Invalid selector ${e}`,i.SYNTAX_ERR);return e},d=n=>{if(n=m(n),/^$|^\s*>|,\s*$/.test(n))throw new DOMException(`Invalid selector ${n}`,i.SYNTAX_ERR);let e;try{const s=(0,a.parse)(n,{context:"selectorList",parseCustomProperty:!0});e=(0,a.toPlainObject)(s)}catch(s){if(s.message==="Identifier is expected"&&x.test(n)){const[,r,t]=x.exec(n),c=t.replace(/\s*\*/g,"\\*").replace(/^"/,"").replace(/"$/,""),o=r.replace(t,c);e=d(n.replace(r,o))}else if(s.message==='"]" is expected'&&!n.endsWith("]"))e=d(`${n}]`);else if(s.message==='")" is expected'&&!n.endsWith(")"))e=d(`${n})`);else throw new DOMException(s.message,i.SYNTAX_ERR)}return e},b=(n={})=>{const e=new Set;let s;return(0,a.walk)(n,{enter:t=>{t.type===i.SELECTOR?e.add(t.children):t.type===i.PSEUDO_CLASS_SELECTOR&&E.test(t.name)&&(s=!0)}}),s&&(0,a.findAll)(n,(t,c,o)=>{if(t.type===i.PSEUDO_CLASS_SELECTOR&&E.test(t.name)&&o){const l=o.filter(p=>{const{name:f,type:g}=p;return g===i.PSEUDO_CLASS_SELECTOR&&E.test(f)});for(const{children:p}of l)for(const{children:f}of p)for(const{children:g}of f)e.has(g)&&e.delete(g)}}),[...e]};0&&(module.exports={generateCSS,parseSelector,preprocess,unescapeSelector,walkAST});
//# sourceMappingURL=parser.js.map
