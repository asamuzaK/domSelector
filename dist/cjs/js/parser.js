var T=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var F=Object.getOwnPropertyNames;var U=Object.prototype.hasOwnProperty;var X=(s,t)=>{for(var n in t)T(s,n,{get:t[n],enumerable:!0})},Y=(s,t,n,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of F(t))!U.call(s,r)&&r!==n&&T(s,r,{get:()=>t[r],enumerable:!(o=b(t,r))||o.enumerable});return s};var H=s=>Y(T({},"__esModule",{value:!0}),s);var ie={};X(ie,{filterSelector:()=>oe,generateCSS:()=>G.generate,parseAstName:()=>W,parseSelector:()=>C,preprocess:()=>B,sortAST:()=>k,unescapeSelector:()=>v,walkAST:()=>j});module.exports=H(ie);var O=require("css-tree"),e=require("./constant.js"),G=require("css-tree");const v=(s="")=>{if(typeof s=="string"&&s.indexOf("\\",0)>=0){const t=s.split("\\"),n=t.length;for(let o=1;o<n;o++){let r=t[o];if(r===""&&o===n-1)r=e.U_FFFD;else{const $=/^([\da-f]{1,6}\s?)/i.exec(r);if($){const[,i]=$;let l;try{const c=parseInt("D800",e.HEX),p=parseInt("DFFF",e.HEX),f=parseInt(i,e.HEX);f===0||f>=c&&f<=p?l=e.U_FFFD:l=String.fromCodePoint(f)}catch{l=e.U_FFFD}let a="";r.length>i.length&&(a=r.substring(i.length)),r=`${l}${a}`}else/^[\n\r\f]/.test(r)&&(r="\\"+r)}t[o]=r}s=t.join("")}return s},B=(...s)=>{if(!s.length)throw new TypeError("1 argument required, but only 0 present.");let[t]=s;if(typeof t=="string"){let n=0;for(;n>=0&&(n=t.indexOf("#",n),!(n<0));){const o=t.substring(0,n+1);let r=t.substring(n+1);if(/^\d$/.test(r.substring(0,1)))throw new DOMException(`Invalid selector ${t}`,e.SYNTAX_ERR);const $=r.codePointAt(0);if($===e.BIT_HYPHEN){if(/^\d$/.test(r.substring(1,2)))throw new DOMException(`Invalid selector ${t}`,e.SYNTAX_ERR)}else if($>e.BIT_FFFF){const i=`\\${$.toString(e.HEX)} `;r.length===e.DUO?r=i:r=`${i}${r.substring(e.DUO)}`}t=`${o}${r}`,n++}t=t.replace(/\f|\r\n?/g,`
`).replace(/[\0\uD800-\uDFFF]|\\$/g,e.U_FFFD)}else if(t==null)t=Object.prototype.toString.call(t).slice(e.TYPE_FROM,e.TYPE_TO).toLowerCase();else if(Array.isArray(t))t=t.join(",");else if(Object.prototype.hasOwnProperty.call(t,"toString"))t=t.toString();else throw new DOMException(`Invalid selector ${t}`,e.SYNTAX_ERR);return t},C=s=>{if(s=B(s),/^$|^\s*>|,\s*$/.test(s))throw new DOMException(`Invalid selector ${s}`,e.SYNTAX_ERR);let t;try{const n=(0,O.parse)(s,{context:"selectorList",parseCustomProperty:!0});t=(0,O.toPlainObject)(n)}catch(n){const{message:o}=n,r=/(:(is|where)\(\s*\))/,$=/(:lang\(\s*("[A-Za-z\d\-*]*")\s*\))/;if(o==="Identifier is expected"&&$.test(s)){const[,i,l]=$.exec(s),a=l.replaceAll("*","\\*").replace(/^"/,"").replace(/"$/,"");let c=i.replace(l,a);c===":lang()"&&(c=`:lang(${e.EMPTY})`),t=C(s.replace(i,c))}else if((o==="Identifier is expected"||o==="Selector is expected")&&r.test(s)){const[,i,l]=r.exec(s),a=`:${l}(${e.EMPTY})`;t=C(s.replace(i,a))}else if(o==='"]" is expected'&&!s.endsWith("]"))t=C(`${s}]`);else if(o==='")" is expected'&&!s.endsWith(")"))t=C(`${s})`);else throw new DOMException(o,e.SYNTAX_ERR)}return t},j=(s={},t=!1)=>{const n=new Set;let o,r;return(0,O.walk)(s,{enter:i=>{i.type===e.SELECTOR?n.add(i.children):(i.type===e.SELECTOR_PSEUDO_CLASS&&e.REG_LOGICAL_PSEUDO.test(i.name)||i.type===e.SELECTOR_PSEUDO_ELEMENT&&e.REG_SHADOW_PSEUDO.test(i.name))&&(o=!0)}}),o&&(0,O.findAll)(s,(i,l,a)=>{if(a){if(i.type===e.SELECTOR_PSEUDO_CLASS&&e.REG_LOGICAL_PSEUDO.test(i.name)){const c=a.filter(p=>{const{name:f,type:_}=p;return _===e.SELECTOR_PSEUDO_CLASS&&e.REG_LOGICAL_PSEUDO.test(f)});for(const{children:p}of c)for(const{children:f}of p)for(const{children:_}of f)if(n.has(_)){if(t)for(const x of _){const{type:N}=x;if(N===e.COMBINATOR){r=!0;break}}else r=!1;n.delete(_)}}else if(i.type===e.SELECTOR_PSEUDO_ELEMENT&&e.REG_SHADOW_PSEUDO.test(i.name)){const c=a.filter(p=>{const{name:f,type:_}=p;return _===e.SELECTOR_PSEUDO_ELEMENT&&e.REG_SHADOW_PSEUDO.test(f)});for(const{children:p}of c)for(const{children:f}of p)n.has(f)&&n.delete(f)}}}),{branches:[...n],complex:r}},k=s=>{const t=[...s];if(t.length>1){const n=new Map([[e.SELECTOR_PSEUDO_ELEMENT,e.BIT_01],[e.SELECTOR_ID,e.BIT_02],[e.SELECTOR_CLASS,e.BIT_04],[e.SELECTOR_TYPE,e.BIT_08],[e.SELECTOR_ATTR,e.BIT_16],[e.SELECTOR_PSEUDO_CLASS,e.BIT_32]]);t.sort((o,r)=>{const{type:$}=o,{type:i}=r,l=n.get($),a=n.get(i);let c;return l===a?c=0:l>a?c=1:c=-1,c})}return t},W=s=>{let t,n;if(s&&typeof s=="string")s.indexOf("|")>-1?[t,n]=s.split("|"):(t="*",n=s);else throw new DOMException(`Invalid selector ${s}`,e.SYNTAX_ERR);return{prefix:t,localName:n}},h="(?:first|last|only)-(?:child|of-type)",A="(?:0|[1-9]\\d*)",z=`[+-]?(?:${A}n?|n)|(?:[+-]?${A})?n\\s*[+-]\\s*${A}`,L=`nth-(?:last-)?(?:child|of-type)\\(\\s*(?:even|odd|${z})\\s*\\)`,E="\\*|[A-Za-z][\\w-]*",S="\\[[^\\]]+\\]|[#.:][\\w-]+",d="(?:is|not|where)",u="\\s?[\\s>~+]\\s?",w="\\s?[~+]\\s?",g=`(?:${E}|(?:${E})?(?:${S})+)`,I=`${g}(?:${u}${g})*`,D=`${g}(?:${w}${g})*`,K=`:${d}\\(\\s*${g}(?:\\s*,\\s*${g})*\\s*\\)`,Z=`:${d}\\(\\s*${I}(?:\\s*,\\s*${I})*\\s*\\)`,q=`:${d}\\(\\s*${D}(?:\\s*,\\s*${D})*\\s*\\)`,y=`(?:${E}|(?:${E})?(?:${S}|${K})+)`,P=`(?:${E}|(?:${E})?(?:${S}|${Z})+)`,m=`(?:${E}|(?:${E})?(?:${S}|${q})+)`,M=`${P}(?:${u}${P})*`,R=`${m}(?:${w}${m})*`,J=`${d}\\(\\s*${y}(?:\\s*,\\s*${y})*\\s*\\)`,Q=`${d}\\(\\s*${M}(?:\\s*,\\s*${M})*\\s*\\)`,V=`${d}\\(\\s*${R}(?:\\s*,\\s*${R})*\\s*\\)`,ee=new RegExp(`:${d}\\(`),te=new RegExp(`:(?!${h}|${L}|${Q})`),se=new RegExp(`:(?!${h}|${L}|${V})`),ne=new RegExp(`:(?!${h}|${L}|${J})`),re=new RegExp(`:(?!${h}|${L})`),oe=(s,t={})=>{if(!s||typeof s!="string"||/\||::|\[\s*[\w$*=^|~-]+(?:(?:"[\w$*=^|~\s'-]+"|'[\w$*=^|~\s"-]+')?(?:\s+[\w$*=^|~-]+)+|"[^"\]]{1,255}|'[^'\]]{1,255})\s*\]/.test(s))return!1;if(s.includes(":")){let n;if(ee.test(s)){const{complex:o,descendant:r}=t;o&&r?n=te:o?n=se:n=ne}else n=re;if(n.test(s))return!1}return!0};0&&(module.exports={filterSelector,generateCSS,parseAstName,parseSelector,preprocess,sortAST,unescapeSelector,walkAST});
//# sourceMappingURL=parser.js.map
