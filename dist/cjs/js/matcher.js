var y=Object.defineProperty;var $=Object.getOwnPropertyDescriptor;var L=Object.getOwnPropertyNames;var S=Object.prototype.hasOwnProperty;var D=(t,e)=>{for(var f in e)y(t,f,{get:e[f],enumerable:!0})},v=(t,e,f,m)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of L(e))!S.call(t,o)&&o!==f&&y(t,o,{get:()=>e[o],enumerable:!(m=$(e,o))||m.enumerable});return t};var C=t=>v(y({},"__esModule",{value:!0}),t);var U={};D(U,{_matchAttributeSelector:()=>k,_matchTypeSelector:()=>O,matchPseudoElementSelector:()=>P,matchSelector:()=>N});module.exports=C(U);var T=require("./dom-util.js"),h=require("./parser.js"),i=require("./constant.js");const k=(t,e)=>{const{flags:f,matcher:m,name:o,value:w}=t;if(typeof f=="string"&&!/^[is]$/i.test(f)){const r=`Invalid selector ${(0,h.generateCSS)(t)}`;throw new DOMException(r,i.SYNTAX_ERR)}const{attributes:x}=e;let d;if(x&&x.length){const g=e.ownerDocument.contentType;let r;g==="text/html"?typeof f=="string"&&/^s$/i.test(f)?r=!1:r=!0:typeof f=="string"&&/^i$/i.test(f)?r=!0:r=!1;let u=(0,h.unescapeSelector)(o.name);r&&(u=u.toLowerCase());const n=new Set;if(u.indexOf("|")>-1){const{prefix:l,localName:p}=(0,h.parseAstName)(u);for(const s of x){let{name:a,value:c}=s;switch(r&&(a=a.toLowerCase(),c=c.toLowerCase()),l){case"":{p===a&&n.add(c);break}case"*":{a.indexOf(":")>-1?a.endsWith(`:${p}`)&&n.add(c):p===a&&n.add(c);break}default:if(a.indexOf(":")>-1){const[b,E]=a.split(":");if(b==="xml"&&E==="lang")continue;l===b&&p===E&&(0,T.isNamespaceDeclared)(l,e)&&n.add(c)}}}}else for(let{name:l,value:p}of x)if(r&&(l=l.toLowerCase(),p=p.toLowerCase()),l.indexOf(":")>-1){const[s,a]=l.split(":");if(s==="xml"&&a==="lang")continue;u===a&&n.add(p)}else u===l&&n.add(p);if(n.size){const{name:l,value:p}=w??{};let s;switch(l?r?s=l.toLowerCase():s=l:p?r?s=p.toLowerCase():s=p:p===""&&(s=p),m){case"=":{typeof s=="string"&&n.has(s)&&(d=e);break}case"~=":{if(s&&typeof s=="string"){for(const a of n)if(new Set(a.split(/\s+/)).has(s)){d=e;break}}break}case"|=":{if(s&&typeof s=="string"){let a;for(const c of n)if(c===s||c.startsWith(`${s}-`)){a=c;break}a&&(d=e)}break}case"^=":{if(s&&typeof s=="string"){let a;for(const c of n)if(c.startsWith(`${s}`)){a=c;break}a&&(d=e)}break}case"$=":{if(s&&typeof s=="string"){let a;for(const c of n)if(c.endsWith(`${s}`)){a=c;break}a&&(d=e)}break}case"*=":{if(s&&typeof s=="string"){let a;for(const c of n)if(c.includes(`${s}`)){a=c;break}a&&(d=e)}break}case null:default:d=e}}}return d??null},O=(t,e,f={})=>{const m=(0,h.unescapeSelector)(t.name),{localName:o,namespaceURI:w,prefix:x}=e,{forgive:d}=f;let{prefix:g,localName:r}=(0,h.parseAstName)(m,e);e.ownerDocument.contentType==="text/html"&&(g=g.toLowerCase(),r=r.toLowerCase());let u,n;o.indexOf(":")>-1?[u,n]=o.split(":"):(u=x||"",n=o);let l;switch(g){case"":{u===""&&w===null&&(r==="*"||r===n)&&(l=e);break}case"*":{(r==="*"||r===n)&&(l=e);break}default:if((0,T.isNamespaceDeclared)(g,e))g===u&&(r==="*"||r===n)&&(l=e);else if(!d){const s=`Undeclared namespace ${g}`;throw new DOMException(s,i.SYNTAX_ERR)}}return l??null},N=(t,e,f)=>{if(!t||!t.type){const w=`Unexpected node ${Object.prototype.toString.call(t).slice(i.TYPE_FROM,i.TYPE_TO)}`;throw new TypeError(w)}else if(!e||!e.nodeType){const w=`Unexpected node ${Object.prototype.toString.call(e).slice(i.TYPE_FROM,i.TYPE_TO)}`;throw new TypeError(w)}else if(e.nodeType!==i.ELEMENT_NODE){const o=`Unexpected node ${e.nodeName}`;throw new TypeError(o)}let m;switch(t.type){case i.SELECTOR_ATTR:{m=k(t,e);break}case i.SELECTOR_TYPE:default:m=O(t,e,f)}return m},P=(t,e={})=>{if(!t||typeof t!="string"){const w=`Unexpected type ${Object.prototype.toString.call(t).slice(i.TYPE_FROM,i.TYPE_TO)}`;throw new TypeError(w)}const{forgive:f,warn:m}=e;switch(t){case"after":case"backdrop":case"before":case"cue":case"cue-region":case"first-letter":case"first-line":case"file-selector-button":case"marker":case"placeholder":case"selection":case"target-text":{if(m){const o=`Unsupported pseudo-element ::${t}`;throw new DOMException(o,i.NOT_SUPPORTED_ERR)}break}case"part":case"slotted":{if(m){const o=`Unsupported pseudo-element ::${t}()`;throw new DOMException(o,i.NOT_SUPPORTED_ERR)}break}default:if(t.startsWith("-webkit-")){if(m){const o=`Unsupported pseudo-element ::${t}`;throw new DOMException(o,i.NOT_SUPPORTED_ERR)}}else if(!f){const o=`Unknown pseudo-element ::${t}`;throw new DOMException(o,i.SYNTAX_ERR)}}};0&&(module.exports={_matchAttributeSelector,_matchTypeSelector,matchPseudoElementSelector,matchSelector});
//# sourceMappingURL=matcher.js.map
