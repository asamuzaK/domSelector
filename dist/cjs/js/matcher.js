var y=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var $=Object.getOwnPropertyNames;var L=Object.prototype.hasOwnProperty;var N=(t,e)=>{for(var p in e)y(t,p,{get:e[p],enumerable:!0})},v=(t,e,p,m)=>{if(e&&typeof e=="object"||typeof e=="function")for(let a of $(e))!L.call(t,a)&&a!==p&&y(t,a,{get:()=>e[a],enumerable:!(m=S(e,a))||m.enumerable});return t};var D=t=>v(y({},"__esModule",{value:!0}),t);var R={};N(R,{_matchAttributeSelector:()=>k,_matchTypeSelector:()=>O,matchPseudoElementSelector:()=>C,matchSelector:()=>U});module.exports=D(R);var E=require("./dom-util.js"),h=require("./parser.js"),i=require("./constant.js");const k=(t,e)=>{const{flags:p,matcher:m,name:a,value:w}=t;if(typeof p=="string"&&!/^[is]$/i.test(p)){const r=`Invalid selector ${(0,h.generateCSS)(t)}`;throw new DOMException(r,i.SYNTAX_ERR)}const{attributes:x}=e;let d;if(x&&x.length){const g=e.ownerDocument.contentType;let r;g==="text/html"?typeof p=="string"&&/^s$/i.test(p)?r=!1:r=!0:typeof p=="string"&&/^i$/i.test(p)?r=!0:r=!1;let u=(0,h.unescapeSelector)(a.name);r&&(u=u.toLowerCase());const n=new Set;if(u.indexOf("|")>-1){const{prefix:l,localName:f}=(0,h.parseAstName)(u);for(const s of x){let{name:o,value:c}=s;switch(r&&(o=o.toLowerCase(),c=c.toLowerCase()),l){case"":{f===o&&n.add(c);break}case"*":{o.indexOf(":")>-1?o.endsWith(`:${f}`)&&n.add(c):f===o&&n.add(c);break}default:if(o.indexOf(":")>-1){const[T,b]=o.split(":");if(T==="xml"&&b==="lang")continue;l===T&&f===b&&(0,E.isNamespaceDeclared)(l,e)&&n.add(c)}}}}else for(let{name:l,value:f}of x)if(r&&(l=l.toLowerCase(),f=f.toLowerCase()),l.indexOf(":")>-1){const[s,o]=l.split(":");if(s==="xml"&&o==="lang")continue;u===o&&n.add(f)}else u===l&&n.add(f);if(n.size){const{name:l,value:f}=w??{};let s;switch(l?r?s=l.toLowerCase():s=l:f?r?s=f.toLowerCase():s=f:f===""&&(s=f),m){case"=":{typeof s=="string"&&n.has(s)&&(d=e);break}case"~=":{if(s&&typeof s=="string"){for(const o of n)if(new Set(o.split(/\s+/)).has(s)){d=e;break}}break}case"|=":{if(s&&typeof s=="string"){let o;for(const c of n)if(c===s||c.startsWith(`${s}-`)){o=c;break}o&&(d=e)}break}case"^=":{if(s&&typeof s=="string"){let o;for(const c of n)if(c.startsWith(`${s}`)){o=c;break}o&&(d=e)}break}case"$=":{if(s&&typeof s=="string"){let o;for(const c of n)if(c.endsWith(`${s}`)){o=c;break}o&&(d=e)}break}case"*=":{if(s&&typeof s=="string"){let o;for(const c of n)if(c.includes(`${s}`)){o=c;break}o&&(d=e)}break}case null:default:d=e}}}return d??null},O=(t,e,p={})=>{const m=(0,h.unescapeSelector)(t.name),{localName:a,namespaceURI:w,prefix:x}=e,{forgive:d}=p;let{prefix:g,localName:r}=(0,h.parseAstName)(m,e);e.ownerDocument.contentType==="text/html"&&(g=g.toLowerCase(),r=r.toLowerCase());let u,n;a.indexOf(":")>-1?[u,n]=a.split(":"):(u=x||"",n=a);let l;switch(g){case"":{!u&&!w&&(r==="*"||r===n)&&(l=e);break}case"*":{(r==="*"||r===n)&&(l=e);break}default:{const f=e.lookupNamespaceURI(g),s=e.lookupNamespaceURI(u);if(f===s&&g===u)(r==="*"||r===n)&&(l=e);else if(!d&&!f){const o=`Undeclared namespace ${g}`;throw new DOMException(o,i.SYNTAX_ERR)}}}return l??null},U=(t,e,p)=>{if(!t||!t.type){const w=`Unexpected node ${Object.prototype.toString.call(t).slice(i.TYPE_FROM,i.TYPE_TO)}`;throw new TypeError(w)}else if(!e||!e.nodeType){const w=`Unexpected node ${Object.prototype.toString.call(e).slice(i.TYPE_FROM,i.TYPE_TO)}`;throw new TypeError(w)}else if(e.nodeType!==i.ELEMENT_NODE){const a=`Unexpected node ${e.nodeName}`;throw new TypeError(a)}let m;switch(t.type){case i.SELECTOR_ATTR:{m=k(t,e);break}case i.SELECTOR_TYPE:default:m=O(t,e,p)}return m},C=(t,e={})=>{if(!t||typeof t!="string"){const w=`Unexpected type ${Object.prototype.toString.call(t).slice(i.TYPE_FROM,i.TYPE_TO)}`;throw new TypeError(w)}const{forgive:p,warn:m}=e;switch(t){case"after":case"backdrop":case"before":case"cue":case"cue-region":case"first-letter":case"first-line":case"file-selector-button":case"marker":case"placeholder":case"selection":case"target-text":{if(m){const a=`Unsupported pseudo-element ::${t}`;throw new DOMException(a,i.NOT_SUPPORTED_ERR)}break}case"part":case"slotted":{if(m){const a=`Unsupported pseudo-element ::${t}()`;throw new DOMException(a,i.NOT_SUPPORTED_ERR)}break}default:if(t.startsWith("-webkit-")){if(m){const a=`Unsupported pseudo-element ::${t}`;throw new DOMException(a,i.NOT_SUPPORTED_ERR)}}else if(!p){const a=`Unknown pseudo-element ::${t}`;throw new DOMException(a,i.SYNTAX_ERR)}}};0&&(module.exports={_matchAttributeSelector,_matchTypeSelector,matchPseudoElementSelector,matchSelector});
//# sourceMappingURL=matcher.js.map
